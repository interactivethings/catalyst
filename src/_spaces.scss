/**
 * Catalyst Spaces
 *
 * Spaces define the distance beween components in a layout. They follow
 * a brief but powerful naming convention:
 *
 *                               TYPE       SIDES         SPACE
 *     <div class="plm"></div>   <p>adding  <l>eft        <m>edium
 *     <div class="mbs"></div>   <m>argin   <b>ottom      <s>mall
 *     <div class="pvs"></div>   <p>adding  <v>ertical    <s>mall
 *     <div class="mhl"></div>   <m>argin   <h>orizontal  <l>arge
 *
 * Types  - <p>adding, <m>argin
 * Sides  - <a>ll, <t>op, <r>ight, <b>ottom, <l>eft, <h>orizontal, <v>ertical
 * Spaces - As defined in the global $spaces variable, e.g. <n>one, <s>mall, <l>arge
 *
 * spaces-install           - make the space classes available to CSS
 * space(type, side, space) - set margin/padding according to space definition
 */

@import "globals";
@import "utils/media-query";
@import "utils/spaces";
@import "utils/strings";


//
// Public API
//

@mixin space($type, $side, $space) {
  @each $side in list-get($__spaces_space-sides, $side) {
    #{list-get($__spaces_space_types, $type)}-#{$side}: #{space($space)};
  }
}

@mixin spaces-install {
  @each $breakpoint in list-keys($breakpoints) {

    @include breakpoint($breakpoint) {
      @each $space in list-keys($spaces) {
        @each $type in (p, m) {
          #{__spaces_space-selectors($type, (a, v, t), $space, $breakpoint)} {
            #{__spaces_type_property($type, top)}: space($space) !important;
          }

          #{__spaces_space-selectors($type, (a, v, b), $space, $breakpoint)} {
            #{__spaces_type_property($type, bottom)}: space($space) !important;
          }

          #{__spaces_space-selectors($type, (a, h, r), $space, $breakpoint)} {
            #{__spaces_type_property($type, right)}: space($space) !important;
          }

          #{__spaces_space-selectors($type, (a, h, l), $space, $breakpoint)} {
            #{__spaces_type_property($type, left)}: space($space) !important;
          }
        }
      }
    }

  }
}


//
// Private API
//

$__spaces_space_types: (
  'p' padding,
  'm' margin
);

$__spaces_space-sides: (
  'a' (top right bottom left),
  'v' (top bottom),
  'h' (left right),
  't' (top),
  'r' (right),
  'b' (bottom),
  'l' (left)
);

@function __spaces_type_property($type, $suffix) {
  @return suffix(list-get($__spaces_space_types, $type), $suffix, '-');
}

@function __spaces_space-selector($type, $side, $space, $breakpoint) {
  @return prefix($type + $side + $space, $breakpoint, '-');
}

@function __spaces_space-selectors($type, $sides, $space, $breakpoint) {
  $selectors: ();
  @each $side in $sides {
    $selector: prefix(__spaces_space-selector($type, $side, $space, $breakpoint), '.');
    $selectors: append($selectors, $selector);
  }
  @return list-flatten($selectors, ', ');
}
